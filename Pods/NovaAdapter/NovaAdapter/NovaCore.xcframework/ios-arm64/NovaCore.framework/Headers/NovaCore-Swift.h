#if 0
#elif defined(__arm64__) && __arm64__
// Generated by Apple Swift version 6.0 effective-5.10 (swiftlang-6.0.0.9.10 clang-1600.0.26.2)
#ifndef NOVACORE_SWIFT_H
#define NOVACORE_SWIFT_H
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wgcc-compat"

#if !defined(__has_include)
# define __has_include(x) 0
#endif
#if !defined(__has_attribute)
# define __has_attribute(x) 0
#endif
#if !defined(__has_feature)
# define __has_feature(x) 0
#endif
#if !defined(__has_warning)
# define __has_warning(x) 0
#endif

#if __has_include(<swift/objc-prologue.h>)
# include <swift/objc-prologue.h>
#endif

#pragma clang diagnostic ignored "-Wauto-import"
#if defined(__OBJC__)
#include <Foundation/Foundation.h>
#endif
#if defined(__cplusplus)
#include <cstdint>
#include <cstddef>
#include <cstdbool>
#include <cstring>
#include <stdlib.h>
#include <new>
#include <type_traits>
#else
#include <stdint.h>
#include <stddef.h>
#include <stdbool.h>
#include <string.h>
#endif
#if defined(__cplusplus)
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wnon-modular-include-in-framework-module"
#if defined(__arm64e__) && __has_include(<ptrauth.h>)
# include <ptrauth.h>
#else
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wreserved-macro-identifier"
# ifndef __ptrauth_swift_value_witness_function_pointer
#  define __ptrauth_swift_value_witness_function_pointer(x)
# endif
# ifndef __ptrauth_swift_class_method_pointer
#  define __ptrauth_swift_class_method_pointer(x)
# endif
#pragma clang diagnostic pop
#endif
#pragma clang diagnostic pop
#endif

#if !defined(SWIFT_TYPEDEFS)
# define SWIFT_TYPEDEFS 1
# if __has_include(<uchar.h>)
#  include <uchar.h>
# elif !defined(__cplusplus)
typedef uint_least16_t char16_t;
typedef uint_least32_t char32_t;
# endif
typedef float swift_float2  __attribute__((__ext_vector_type__(2)));
typedef float swift_float3  __attribute__((__ext_vector_type__(3)));
typedef float swift_float4  __attribute__((__ext_vector_type__(4)));
typedef double swift_double2  __attribute__((__ext_vector_type__(2)));
typedef double swift_double3  __attribute__((__ext_vector_type__(3)));
typedef double swift_double4  __attribute__((__ext_vector_type__(4)));
typedef int swift_int2  __attribute__((__ext_vector_type__(2)));
typedef int swift_int3  __attribute__((__ext_vector_type__(3)));
typedef int swift_int4  __attribute__((__ext_vector_type__(4)));
typedef unsigned int swift_uint2  __attribute__((__ext_vector_type__(2)));
typedef unsigned int swift_uint3  __attribute__((__ext_vector_type__(3)));
typedef unsigned int swift_uint4  __attribute__((__ext_vector_type__(4)));
#endif

#if !defined(SWIFT_PASTE)
# define SWIFT_PASTE_HELPER(x, y) x##y
# define SWIFT_PASTE(x, y) SWIFT_PASTE_HELPER(x, y)
#endif
#if !defined(SWIFT_METATYPE)
# define SWIFT_METATYPE(X) Class
#endif
#if !defined(SWIFT_CLASS_PROPERTY)
# if __has_feature(objc_class_property)
#  define SWIFT_CLASS_PROPERTY(...) __VA_ARGS__
# else
#  define SWIFT_CLASS_PROPERTY(...) 
# endif
#endif
#if !defined(SWIFT_RUNTIME_NAME)
# if __has_attribute(objc_runtime_name)
#  define SWIFT_RUNTIME_NAME(X) __attribute__((objc_runtime_name(X)))
# else
#  define SWIFT_RUNTIME_NAME(X) 
# endif
#endif
#if !defined(SWIFT_COMPILE_NAME)
# if __has_attribute(swift_name)
#  define SWIFT_COMPILE_NAME(X) __attribute__((swift_name(X)))
# else
#  define SWIFT_COMPILE_NAME(X) 
# endif
#endif
#if !defined(SWIFT_METHOD_FAMILY)
# if __has_attribute(objc_method_family)
#  define SWIFT_METHOD_FAMILY(X) __attribute__((objc_method_family(X)))
# else
#  define SWIFT_METHOD_FAMILY(X) 
# endif
#endif
#if !defined(SWIFT_NOESCAPE)
# if __has_attribute(noescape)
#  define SWIFT_NOESCAPE __attribute__((noescape))
# else
#  define SWIFT_NOESCAPE 
# endif
#endif
#if !defined(SWIFT_RELEASES_ARGUMENT)
# if __has_attribute(ns_consumed)
#  define SWIFT_RELEASES_ARGUMENT __attribute__((ns_consumed))
# else
#  define SWIFT_RELEASES_ARGUMENT 
# endif
#endif
#if !defined(SWIFT_WARN_UNUSED_RESULT)
# if __has_attribute(warn_unused_result)
#  define SWIFT_WARN_UNUSED_RESULT __attribute__((warn_unused_result))
# else
#  define SWIFT_WARN_UNUSED_RESULT 
# endif
#endif
#if !defined(SWIFT_NORETURN)
# if __has_attribute(noreturn)
#  define SWIFT_NORETURN __attribute__((noreturn))
# else
#  define SWIFT_NORETURN 
# endif
#endif
#if !defined(SWIFT_CLASS_EXTRA)
# define SWIFT_CLASS_EXTRA 
#endif
#if !defined(SWIFT_PROTOCOL_EXTRA)
# define SWIFT_PROTOCOL_EXTRA 
#endif
#if !defined(SWIFT_ENUM_EXTRA)
# define SWIFT_ENUM_EXTRA 
#endif
#if !defined(SWIFT_CLASS)
# if __has_attribute(objc_subclassing_restricted)
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# else
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# endif
#endif
#if !defined(SWIFT_RESILIENT_CLASS)
# if __has_attribute(objc_class_stub)
#  define SWIFT_RESILIENT_CLASS(SWIFT_NAME) SWIFT_CLASS(SWIFT_NAME) __attribute__((objc_class_stub))
#  define SWIFT_RESILIENT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_class_stub)) SWIFT_CLASS_NAMED(SWIFT_NAME)
# else
#  define SWIFT_RESILIENT_CLASS(SWIFT_NAME) SWIFT_CLASS(SWIFT_NAME)
#  define SWIFT_RESILIENT_CLASS_NAMED(SWIFT_NAME) SWIFT_CLASS_NAMED(SWIFT_NAME)
# endif
#endif
#if !defined(SWIFT_PROTOCOL)
# define SWIFT_PROTOCOL(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
# define SWIFT_PROTOCOL_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
#endif
#if !defined(SWIFT_EXTENSION)
# define SWIFT_EXTENSION(M) SWIFT_PASTE(M##_Swift_, __LINE__)
#endif
#if !defined(OBJC_DESIGNATED_INITIALIZER)
# if __has_attribute(objc_designated_initializer)
#  define OBJC_DESIGNATED_INITIALIZER __attribute__((objc_designated_initializer))
# else
#  define OBJC_DESIGNATED_INITIALIZER 
# endif
#endif
#if !defined(SWIFT_ENUM_ATTR)
# if __has_attribute(enum_extensibility)
#  define SWIFT_ENUM_ATTR(_extensibility) __attribute__((enum_extensibility(_extensibility)))
# else
#  define SWIFT_ENUM_ATTR(_extensibility) 
# endif
#endif
#if !defined(SWIFT_ENUM)
# define SWIFT_ENUM(_type, _name, _extensibility) enum _name : _type _name; enum SWIFT_ENUM_ATTR(_extensibility) SWIFT_ENUM_EXTRA _name : _type
# if __has_feature(generalized_swift_name)
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME, _extensibility) enum _name : _type _name SWIFT_COMPILE_NAME(SWIFT_NAME); enum SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_ENUM_ATTR(_extensibility) SWIFT_ENUM_EXTRA _name : _type
# else
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME, _extensibility) SWIFT_ENUM(_type, _name, _extensibility)
# endif
#endif
#if !defined(SWIFT_UNAVAILABLE)
# define SWIFT_UNAVAILABLE __attribute__((unavailable))
#endif
#if !defined(SWIFT_UNAVAILABLE_MSG)
# define SWIFT_UNAVAILABLE_MSG(msg) __attribute__((unavailable(msg)))
#endif
#if !defined(SWIFT_AVAILABILITY)
# define SWIFT_AVAILABILITY(plat, ...) __attribute__((availability(plat, __VA_ARGS__)))
#endif
#if !defined(SWIFT_WEAK_IMPORT)
# define SWIFT_WEAK_IMPORT __attribute__((weak_import))
#endif
#if !defined(SWIFT_DEPRECATED)
# define SWIFT_DEPRECATED __attribute__((deprecated))
#endif
#if !defined(SWIFT_DEPRECATED_MSG)
# define SWIFT_DEPRECATED_MSG(...) __attribute__((deprecated(__VA_ARGS__)))
#endif
#if !defined(SWIFT_DEPRECATED_OBJC)
# if __has_feature(attribute_diagnose_if_objc)
#  define SWIFT_DEPRECATED_OBJC(Msg) __attribute__((diagnose_if(1, Msg, "warning")))
# else
#  define SWIFT_DEPRECATED_OBJC(Msg) SWIFT_DEPRECATED_MSG(Msg)
# endif
#endif
#if defined(__OBJC__)
#if !defined(IBSegueAction)
# define IBSegueAction 
#endif
#endif
#if !defined(SWIFT_EXTERN)
# if defined(__cplusplus)
#  define SWIFT_EXTERN extern "C"
# else
#  define SWIFT_EXTERN extern
# endif
#endif
#if !defined(SWIFT_CALL)
# define SWIFT_CALL __attribute__((swiftcall))
#endif
#if !defined(SWIFT_INDIRECT_RESULT)
# define SWIFT_INDIRECT_RESULT __attribute__((swift_indirect_result))
#endif
#if !defined(SWIFT_CONTEXT)
# define SWIFT_CONTEXT __attribute__((swift_context))
#endif
#if !defined(SWIFT_ERROR_RESULT)
# define SWIFT_ERROR_RESULT __attribute__((swift_error_result))
#endif
#if defined(__cplusplus)
# define SWIFT_NOEXCEPT noexcept
#else
# define SWIFT_NOEXCEPT 
#endif
#if !defined(SWIFT_C_INLINE_THUNK)
# if __has_attribute(always_inline)
# if __has_attribute(nodebug)
#  define SWIFT_C_INLINE_THUNK inline __attribute__((always_inline)) __attribute__((nodebug))
# else
#  define SWIFT_C_INLINE_THUNK inline __attribute__((always_inline))
# endif
# else
#  define SWIFT_C_INLINE_THUNK inline
# endif
#endif
#if defined(_WIN32)
#if !defined(SWIFT_IMPORT_STDLIB_SYMBOL)
# define SWIFT_IMPORT_STDLIB_SYMBOL __declspec(dllimport)
#endif
#else
#if !defined(SWIFT_IMPORT_STDLIB_SYMBOL)
# define SWIFT_IMPORT_STDLIB_SYMBOL 
#endif
#endif
#if defined(__OBJC__)
#if __has_feature(objc_modules)
#if __has_warning("-Watimport-in-framework-header")
#pragma clang diagnostic ignored "-Watimport-in-framework-header"
#endif
@import CoreFoundation;
@import Foundation;
@import ObjectiveC;
@import UIKit;
@import WebKit;
#endif

#endif
#pragma clang diagnostic ignored "-Wproperty-attribute-mismatch"
#pragma clang diagnostic ignored "-Wduplicate-method-arg"
#if __has_warning("-Wpragma-clang-attribute")
# pragma clang diagnostic ignored "-Wpragma-clang-attribute"
#endif
#pragma clang diagnostic ignored "-Wunknown-pragmas"
#pragma clang diagnostic ignored "-Wnullability"
#pragma clang diagnostic ignored "-Wdollar-in-identifier-extension"
#pragma clang diagnostic ignored "-Wunsafe-buffer-usage"

#if __has_attribute(external_source_symbol)
# pragma push_macro("any")
# undef any
# pragma clang attribute push(__attribute__((external_source_symbol(language="Swift", defined_in="NovaCore",generated_declaration))), apply_to=any(function,enum,objc_interface,objc_category,objc_protocol))
# pragma pop_macro("any")
#endif

#if defined(__OBJC__)

SWIFT_CLASS("_TtC8NovaCore19ActionHandlerMaster")
@interface ActionHandlerMaster : NSObject
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


@class NSCoder;

SWIFT_CLASS("_TtC8NovaCore14CheckBoxButton")
@interface CheckBoxButton : UIButton
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder SWIFT_UNAVAILABLE;
@end

typedef SWIFT_ENUM(NSInteger, MetricEvent, open) {
  MetricEventFacebookLogin = 0,
  MetricEventFeedbackTextSubmitted = 1,
  MetricEventArticleFeedback = 2,
  MetricEventArticleRating = 3,
  MetricEventAdClick = 4,
  MetricEventAdSlotImpression = 5,
  MetricEventAdRevenueImpression = 6,
  MetricEventAdDeDuplicated = 7,
  MetricEventAdBlocked = 8,
  MetricEventAdSendFeedback = 9,
  MetricEventAdPaid = 10,
  MetricEventAdWinnerDecided = 11,
  MetricEventLoadItemsWithoutAds = 12,
  MetricEventAdResponse = 13,
  MetricEventAdRequest = 14,
  MetricEventAdClickEmptyArea = 15,
  MetricEventAppContentDisplayed = 16,
  MetricEventAdCacheExpired = 17,
  MetricEventEnterFullArticleWithAdSlot = 18,
  MetricEventEnterFullArticleWithAdFilled = 19,
  MetricEventClickPushDoc = 20,
  MetricEventClickPushOthers = 21,
  MetricEventInvalidPushContent = 22,
  MetricEventGetPushContentFailed = 23,
  MetricEventClickDoc = 24,
  MetricEventEnterNews = 25,
  MetricEventClickSocial = 26,
  MetricEventEnterSocial = 27,
  MetricEventEnterNewsByWebUrl = 28,
  MetricEventPopBtnView = 29,
  MetricEventPopBtnClick = 30,
  MetricEventNovaLandingPageLaunchFailed = 31,
  MetricEventNovaLandingPageStart = 32,
  MetricEventNovaLandingPageTextLoad = 33,
  MetricEventNovaLandingPageAllLoad = 34,
  MetricEventNovaLandingPageClose = 35,
  MetricEventNovaLandingPageJumpOut = 36,
  MetricEventNovaLandingPageJumpIn = 37,
  MetricEventNovaLandingPageResignActive = 38,
  MetricEventNovaLandingPageAliveAfter5s = 39,
  MetricEventNovaLandingPageRecycledAfter5s = 40,
  MetricEventPrebidBannerPresentModal = 41,
  MetricEventImageDownloadReport = 42,
  MetricEventImageDownloadErrorReport = 43,
  MetricEventOpenApp = 44,
  MetricEventCloseApp = 45,
  MetricEventFirstOpen = 46,
  MetricEventTabBarViewTime = 47,
  MetricEventTabAddClick = 48,
  MetricEventTabManage = 49,
  MetricEventGoTab2 = 50,
  MetricEventTopSearchBoxShow = 51,
  MetricEventTopSearchBoxClick = 52,
  MetricEventSystemPushNotificationAllowed = 53,
  MetricEventSystemPushNotificationDenied = 54,
  MetricEventGoogleLogin = 55,
  MetricEventAppleLogin = 56,
  MetricEventEmailLogin = 57,
  MetricEventRegisterPush = 58,
  MetricEventDetectApp = 59,
  MetricEventApiReport = 60,
  MetricEventNetworkError = 61,
  MetricEventNegativeFeedback = 62,
  MetricEventShareViaEmail = 63,
  MetricEventShareViaSMS = 64,
  MetricEventShareViaWhatsapp = 65,
  MetricEventViewStream = 66,
  MetricEventChannelViewTime = 67,
  MetricEventChangeChannel = 68,
  MetricEventLeaveNews = 69,
  MetricEventPageLoadDetail = 70,
  MetricEventClickVideo = 71,
  MetricEventVideoPlay = 72,
  MetricEventVideoPlaying = 73,
  MetricEventVideoEnd = 74,
  MetricEventVideoFailed = 75,
  MetricEventVideoLoadTime = 76,
  MetricEventFullArticleFinishedLoading = 77,
  MetricEventPageLoadFailure = 78,
  MetricEventReadFullArticle = 79,
  MetricEventFollowMediaAccount = 80,
  MetricEventUnfollowMediaAccount = 81,
  MetricEventCheckUserProfile = 82,
  MetricEventThumbUpDoc = 83,
  MetricEventThumbDownDoc = 84,
  MetricEventEnterVideo = 85,
  MetricEventShareButton = 86,
  MetricEventShareDestination = 87,
  MetricEventShareSendResult = 88,
  MetricEventDidGrantLocationPermission = 89,
  MetricEventDidDenyLocationPermission = 90,
  MetricEventDidLocationUndetermined = 91,
  MetricEventLoadFeedReturnError = 92,
  MetricEventReactionDetailClick = 93,
  MetricEventShowSearchHomePage = 94,
  MetricEventDoSearch = 95,
  MetricEventFetchedSearchResults = 96,
  MetricEventSearchResultClick = 97,
  MetricEventSearchSortChange = 98,
  MetricEventFetchedNoResults = 99,
  MetricEventFollowWidgetExposure = 100,
  MetricEventClickHyperlink = 101,
  MetricEventAutoLogin = 102,
  MetricEventGetUserInfo = 103,
  MetricEventNewSession = 104,
  MetricEventUsageDuration = 105,
  MetricEventClickFeedArticleMoreButton = 106,
  MetricEventCommentTopShow = 107,
  MetricEventCommentAllShow = 108,
  MetricEventCommentShow = 109,
  MetricEventCommentReplyClick = 110,
  MetricEventCommentReplyFinish = 111,
  MetricEventCommentCommentClick = 112,
  MetricEventCommentCommentFinish = 113,
  MetricEventCommentShowRepliesClick = 114,
  MetricEventThumbUpComment = 115,
  MetricEventThumbDownComment = 116,
  MetricEventCommentThreePointClick = 117,
  MetricEventCommentShareClick = 118,
  MetricEventCommentDuration = 119,
  MetricEventCommentReportShow = 120,
  MetricEventCommentReportReason = 121,
  MetricEventCommentBlockUser = 122,
  MetricEventCommentCollapsedClick = 123,
  MetricEventViewComment = 124,
  MetricEventPostComment = 125,
  MetricEventPostReply = 126,
  MetricEventLeaveCommentsView = 127,
  MetricEventCommentGuidelinesClick = 128,
  MetricEventUgcPinComment = 129,
  MetricEventNoCommentViewShow = 130,
  MetricEventWriteCommentButtonClick = 131,
  MetricEventNotificationCommentShow = 132,
  MetricEventCommentAppealClick = 133,
  MetricEventCommentAppealComplete = 134,
  MetricEventNegativeFeedbackShow = 135,
  MetricEventUndoNegativeFeedbackClick = 136,
  MetricEventNegativeFeedbackSubmit = 137,
  MetricEventShowLocationPicker = 138,
  MetricEventClickPrimeLocationChange = 139,
  MetricEventClickAddMoreLocations = 140,
  MetricEventClickLocationSearchBar = 141,
  MetricEventSetPrimeLocation = 142,
  MetricEventAddLocationSearchSelect = 143,
  MetricEventRemoveLocation = 144,
  MetricEventModuleViewMore = 145,
  MetricEventModuleClick = 146,
  MetricEventFeedActionPromptClick = 147,
  MetricEventFeedActionPromptDismiss = 148,
  MetricEventCheckedViewNew = 149,
  MetricEventTopicFollow = 150,
  MetricEventTopicUnfollow = 151,
  MetricEventTopicsSelected = 152,
  MetricEventUgcEnterPostManagement = 153,
  MetricEventUgcCreateVideo = 154,
  MetricEventUgcLostPermission = 155,
  MetricEventUgcVideoOpenCamera = 156,
  MetricEventUgcDiscardPost = 157,
  MetricEventUgcVideoUpload = 158,
  MetricEventUgcCreateVideoCompleted = 159,
  MetricEventUgcEnterMetadata = 160,
  MetricEventUgcEnterDetailedLocation = 161,
  MetricEventUgcSelectedLocation = 162,
  MetricEventUgcSubmitPost = 163,
  MetricEventUgcSubmitPostFinished = 164,
  MetricEventUgcEnterFollowerList = 165,
  MetricEventUgcClickFollower = 166,
  MetricEventUgcViewPost = 167,
  MetricEventUgcDeletePost = 168,
  MetricEventShowInboxTab = 169,
  MetricEventUgcClickActivityMessage = 170,
  MetricEventCarouselCreateVideo = 171,
  MetricEventPushPromptClick = 172,
  MetricEventUgcCommentDropdown = 173,
  MetricEventProfilePageEnter = 174,
  MetricEventLikeDoc = 175,
  MetricEventUnlikeDoc = 176,
  MetricEventSummaryDoc = 177,
  MetricEventUgcEnterPrompt = 178,
  MetricEventUgcCheckPrompt = 179,
  MetricEventUgcCreateFromPrompt = 180,
  MetricEventPushStatusChange = 181,
  MetricEventClickPushChannel = 182,
  MetricEventClickPushWebUrl = 183,
  MetricEventBeginSearchChannel = 184,
  MetricEventPushAlive = 185,
  MetricEventAddChannels = 186,
  MetricEventRemoveChannels = 187,
  MetricEventStreamRefresh = 188,
  MetricEventCancelPushDoc = 189,
  MetricEventSafetyMapMarkersAgg = 190,
  MetricEventSafetyMapMarkersScattered = 191,
  MetricEventSafetyMapDuration = 192,
  MetricEventSafetyMapAction = 193,
  MetricEventSafetyMapNotificationOnBanner = 194,
  MetricEventSafetyMapGpsOnBanner = 195,
  MetricEventSafetyMapLocOpt = 196,
  MetricEventCrimeReportDuration = 197,
  MetricEventShareCrimeReport = 198,
  MetricEventRecAccountPage = 199,
  MetricEventRecAccountYes = 200,
  MetricEventRecAccountNo = 201,
  MetricEventFullArticleCrimeMapBtnClick = 202,
  MetricEventFullArticleCrimeMapBtnView = 203,
  MetricEventFullArticleCrimeMapImgClick = 204,
  MetricEventFullArticleCrimeMapImgView = 205,
  MetricEventFullArticleShareBtnView = 206,
  MetricEventFullArticleShareBtnFacebookClick = 207,
  MetricEventFullArticleShareBtnSmsClick = 208,
  MetricEventFullArticleShareBtnEmailClick = 209,
  MetricEventFullArticleShareBtnMessengerClick = 210,
  MetricEventFullArticleShareBtnCopyClick = 211,
  MetricEventElecNaviClick = 212,
  MetricEventElecStateSelect = 213,
  MetricEventElecStatePage = 214,
  MetricEventElecStateDone = 215,
  MetricEventElecCandClick = 216,
  MetricEventOpenShortcut = 217,
  MetricEventOpenSpotlight = 218,
};

@class NSString;

SWIFT_CLASS("_TtC8NovaCore20NovaAdMetricReporter")
@interface NovaAdMetricReporter : NSObject
+ (void)logAdHideWithReason:(NSString * _Nonnull)reason encryptedAdToken:(NSString * _Nonnull)encryptedAdToken;
+ (void)logAdUnhideWithEncryptedAdToken:(NSString * _Nonnull)encryptedAdToken;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end




SWIFT_CLASS("_TtC8NovaCore23NovaAdOpenActionHandler")
@interface NovaAdOpenActionHandler : NSObject
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end



typedef SWIFT_ENUM(NSInteger, NovaAdType, open) {
  NovaAdTypeAppOpen = 0,
  NovaAdTypeNative = 1,
  NovaAdTypeBanner = 2,
  NovaAdTypeNativeParallax = 3,
};

@class NSBundle;

SWIFT_CLASS("_TtC8NovaCore31NovaAdsLandingWebViewController")
@interface NovaAdsLandingWebViewController : UIViewController
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder SWIFT_UNAVAILABLE;
- (void)viewDidLoad;
- (void)viewDidDisappear:(BOOL)animated;
- (nonnull instancetype)initWithNibName:(NSString * _Nullable)nibNameOrNil bundle:(NSBundle * _Nullable)nibBundleOrNil SWIFT_UNAVAILABLE;
@end


@class UIScrollView;

@interface NovaAdsLandingWebViewController (SWIFT_EXTENSION(NovaCore)) <UIScrollViewDelegate>
- (void)scrollViewDidScroll:(UIScrollView * _Nonnull)scrollView;
- (void)scrollViewDidEndDragging:(UIScrollView * _Nonnull)scrollView willDecelerate:(BOOL)decelerate;
@end





SWIFT_CLASS("_TtC8NovaCore36NovaAdsVideoLandingWebViewController")
@interface NovaAdsVideoLandingWebViewController : UIViewController
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER SWIFT_UNAVAILABLE;
- (void)viewDidLoad;
- (void)viewWillAppear:(BOOL)animated;
- (void)viewWillDisappear:(BOOL)animated;
- (nonnull instancetype)initWithNibName:(NSString * _Nullable)nibNameOrNil bundle:(NSBundle * _Nullable)nibBundleOrNil SWIFT_UNAVAILABLE;
@end



SWIFT_CLASS("_TtC8NovaCore10NovaBaseAd")
@interface NovaBaseAd : NSObject
/// Ad unit id of nova ad
@property (nonatomic, readonly, copy) NSString * _Nonnull adUnitId;
/// Rqeust UUID for nova ad, used to join all nova events on server.
@property (nonatomic, readonly, copy) NSString * _Nonnull requestId;
/// used in nova ad manager, to identify the ad, not the same as ios system adid.
@property (nonatomic, readonly, copy) NSString * _Nonnull adId;
/// used in nova ad manager, to identify the adset which the ad belongs
@property (nonatomic, readonly, copy) NSString * _Nonnull adSetId;
/// Ad image url.
@property (nonatomic, readonly, copy) NSString * _Nullable imageUrlStr;
/// Encoded ids for server tracking.
@property (nonatomic, readonly, copy) NSString * _Nonnull encryptedAdToken;
- (float)priceInCents SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

@protocol NovaAppOpenAdDelegate;

SWIFT_CLASS("_TtC8NovaCore13NovaAppOpenAd")
@interface NovaAppOpenAd : NovaBaseAd
/// Delegate used to handle ad click event logging
@property (nonatomic, weak) id <NovaAppOpenAdDelegate> _Nullable delegate;
@end


SWIFT_PROTOCOL("_TtP8NovaCore21NovaAppOpenAdDelegate_")
@protocol NovaAppOpenAdDelegate
- (void)appOpenAdDidDisplay:(NovaAppOpenAd * _Nonnull)appOpenAd;
- (void)appOpenAdDidDismiss:(NovaAppOpenAd * _Nonnull)appOpenAd;
- (void)appOpenAdDidLogClick:(NovaAppOpenAd * _Nonnull)appOpenAd;
@optional
- (void)appOpenAdDidFailToDisplay:(NovaAppOpenAd * _Nonnull)appOpenAd;
@end


SWIFT_CLASS("_TtC8NovaCore30NovaAppOpenAdViewActionHandler")
@interface NovaAppOpenAdViewActionHandler : NSObject
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end




SWIFT_CLASS("_TtC8NovaCore27NovaAppOpenAdViewController")
@interface NovaAppOpenAdViewController : UIViewController
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder SWIFT_UNAVAILABLE;
- (void)loadView;
- (void)viewDidAppear:(BOOL)animated;
- (void)viewDidDisappear:(BOOL)animated;
@property (nonatomic, readonly) UIStatusBarStyle preferredStatusBarStyle;
- (nonnull instancetype)initWithNibName:(NSString * _Nullable)nibNameOrNil bundle:(NSBundle * _Nullable)nibBundleOrNil SWIFT_UNAVAILABLE;
@end


SWIFT_CLASS("_TtC8NovaCore19NovaAppOpenAdViewV3")
@interface NovaAppOpenAdViewV3 : UIView
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder SWIFT_UNAVAILABLE;
- (nonnull instancetype)initWithFrame:(CGRect)frame SWIFT_UNAVAILABLE;
@end



SWIFT_CLASS("_TtC8NovaCore30NovaAppOpenVerticalVideoAdView")
@interface NovaAppOpenVerticalVideoAdView : UIView
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder SWIFT_UNAVAILABLE;
- (nonnull instancetype)initWithFrame:(CGRect)frame SWIFT_UNAVAILABLE;
@end




@class UIColor;

/// Standard color palettes are defined at
/// https://www.figma.com/file/az2QtfMgOx1SK2q78WVu71/Design-System—Foundations?node-id=311%3A1224
SWIFT_CLASS("_TtC8NovaCore17NovaColorPalettes")
@interface NovaColorPalettes : NSObject
@property (nonatomic, readonly, strong) UIColor * _Nonnull tint50;
@property (nonatomic, readonly, strong) UIColor * _Nonnull tint100;
@property (nonatomic, readonly, strong) UIColor * _Nonnull tint200;
@property (nonatomic, readonly, strong) UIColor * _Nonnull tint300;
@property (nonatomic, readonly, strong) UIColor * _Nonnull tint400;
@property (nonatomic, readonly, strong) UIColor * _Nonnull tint500;
@property (nonatomic, readonly, strong) UIColor * _Nonnull tint600;
@property (nonatomic, readonly, strong) UIColor * _Nonnull tint700;
@property (nonatomic, readonly, strong) UIColor * _Nonnull tint800;
@property (nonatomic, readonly, strong) UIColor * _Nonnull tint900;
@property (nonatomic, readonly, strong) UIColor * _Nullable tint950;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIColor * _Nonnull Black;)
+ (UIColor * _Nonnull)Black SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIColor * _Nonnull White;)
+ (UIColor * _Nonnull)White SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) NovaColorPalettes * _Nonnull Gray;)
+ (NovaColorPalettes * _Nonnull)Gray SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) NovaColorPalettes * _Nonnull App;)
+ (NovaColorPalettes * _Nonnull)App SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) NovaColorPalettes * _Nonnull Blue;)
+ (NovaColorPalettes * _Nonnull)Blue SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) NovaColorPalettes * _Nonnull Green;)
+ (NovaColorPalettes * _Nonnull)Green SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) NovaColorPalettes * _Nonnull Orange;)
+ (NovaColorPalettes * _Nonnull)Orange SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) NovaColorPalettes * _Nonnull Yellow;)
+ (NovaColorPalettes * _Nonnull)Yellow SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) NovaColorPalettes * _Nonnull Magenta;)
+ (NovaColorPalettes * _Nonnull)Magenta SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) NovaColorPalettes * _Nonnull Purple;)
+ (NovaColorPalettes * _Nonnull)Purple SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) NovaColorPalettes * _Nonnull Skyblue;)
+ (NovaColorPalettes * _Nonnull)Skyblue SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) NovaColorPalettes * _Nonnull Sapphire;)
+ (NovaColorPalettes * _Nonnull)Sapphire SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC8NovaCore8NovaIcon")
@interface NovaIcon : NSObject
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


@interface NovaIcon (SWIFT_EXTENSION(NovaCore))
@end

typedef SWIFT_ENUM(NSInteger, NovaSystem, open) {
  NovaSystemArrowLeftOutline = 0,
  NovaSystemBellFilled = 1,
  NovaSystemBellOutline = 2,
  NovaSystemBreezeFilled = 3,
  NovaSystemBreezeOutline = 4,
  NovaSystemCameraOutline = 5,
  NovaSystemChartBarOutline = 6,
  NovaSystemCheckCircleFilled = 7,
  NovaSystemCheckCircleOutline = 8,
  NovaSystemChevronDownFilled = 9,
  NovaSystemChevronDownOutline = 10,
  NovaSystemChevronLeftFilled = 11,
  NovaSystemChevronLeftOutline = 12,
  NovaSystemChevronRightFilled = 13,
  NovaSystemChevronRightOutline = 14,
  NovaSystemChevronUpFilled = 15,
  NovaSystemClockOutline = 16,
  NovaSystemCrossFilled = 17,
  NovaSystemCrossOutline = 18,
  NovaSystemCrossCircleFilled = 19,
  NovaSystemCrossCircleOutline = 20,
  NovaSystemEllipsisHorizontalOutline = 21,
  NovaSystemEllipsisVerticalFilled = 22,
  NovaSystemExclamationCircleOutline = 23,
  NovaSystemExclamationTriangleOutline = 24,
  NovaSystemGlobeOutline = 25,
  NovaSystemHashtagOutline = 26,
  NovaSystemHeartOutline = 27,
  NovaSystemImageOutline = 28,
  NovaSystemLinkOutline = 29,
  NovaSystemLocationOutline = 30,
  NovaSystemMoneyOutline = 31,
  NovaSystemNavigationArrowOutline = 32,
  NovaSystemNewsbreakOutline = 33,
  NovaSystemPeopleFilled = 34,
  NovaSystemPeopleOutline = 35,
  NovaSystemPlayFilled = 36,
  NovaSystemPlusOutline = 37,
  NovaSystemProhibitOutline = 38,
  NovaSystemShareOutline = 39,
  NovaSystemShieldErrorOutline = 40,
  NovaSystemTrashOutline = 41,
  NovaSystemVideoClipFilled = 42,
  NovaSystemVideoClipOutline = 43,
  NovaSystemMagicOutline = 44,
  NovaSystemMagicStarFilled = 45,
  NovaSystemHomeOutline = 46,
};

@class NovaNativeAdItem;

SWIFT_PROTOCOL("_TtP8NovaCore20NovaNativeAdDelegate_")
@protocol NovaNativeAdDelegate
- (void)nativeAdDidLogImpression:(NovaNativeAdItem * _Nonnull)nativeAd;
- (void)nativeAdDidLogClick:(NovaNativeAdItem * _Nonnull)nativeAd clickAreaName:(NSString * _Nonnull)clickAreaName;
- (void)nativeAdDidFinishRender:(NovaNativeAdItem * _Nonnull)nativeAd;
- (UIViewController * _Nullable)nativeAdRootViewController SWIFT_WARN_UNUSED_RESULT;
@end

@class NSIndexPath;

SWIFT_CLASS("_TtC8NovaCore16NovaNativeAdItem")
@interface NovaNativeAdItem : NovaBaseAd
/// Headline.
@property (nonatomic, readonly, copy) NSString * _Nullable headline;
/// Description.
@property (nonatomic, readonly, copy) NSString * _Nullable body;
/// CTA button text.
@property (nonatomic, readonly, copy) NSString * _Nullable callToAction;
/// Identify the advertiser. For example, advertiser’s name or visible url.
@property (nonatomic, readonly, copy) NSString * _Nullable advertiser;
/// Delegate used to handle ad state update. For example, ad impression or ad click.
@property (nonatomic, weak) id <NovaNativeAdDelegate> _Nullable delegate;
@property (nonatomic, readonly) NSDecimal eCPMInDollar;
@property (nonatomic, copy) NSIndexPath * _Nullable cellIndexPath;
@property (nonatomic, copy) NSString * _Nullable dedupUUID;
/// Time to load this ad after placehoder shows, measured in ms.
@property (nonatomic) double impressionLatency;
- (void)downloadMedia;
@end


SWIFT_CLASS("_TtC8NovaCore21NovaNativeAdMediaView")
@interface NovaNativeAdMediaView : UIView
- (nonnull instancetype)initWithFrame:(CGRect)frame SWIFT_UNAVAILABLE;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder SWIFT_UNAVAILABLE;
@end


@interface NovaNativeAdMediaView (SWIFT_EXTENSION(NovaCore))
- (void)willResignActive;
- (void)didBecomeActive;
- (void)handleVideoOnScreen;
@end


SWIFT_CLASS("_TtC8NovaCore31NovaNativeAdMediaViewController")
@interface NovaNativeAdMediaViewController : UIViewController
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder SWIFT_UNAVAILABLE;
- (void)loadView;
- (void)viewDidLoad;
- (void)viewWillAppear:(BOOL)animated;
- (void)viewWillDisappear:(BOOL)animated;
- (nonnull instancetype)initWithNibName:(NSString * _Nullable)nibNameOrNil bundle:(NSBundle * _Nullable)nibBundleOrNil SWIFT_UNAVAILABLE;
@end


SWIFT_CLASS("_TtC8NovaCore23NovaNativeAdMediaViewV2")
@interface NovaNativeAdMediaViewV2 : UIView
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder SWIFT_UNAVAILABLE;
- (nonnull instancetype)initWithFrame:(CGRect)frame SWIFT_UNAVAILABLE;
@end



SWIFT_PROTOCOL("_TtP8NovaCore25NovaNativeAdVideoDelegate_")
@protocol NovaNativeAdVideoDelegate
- (void)playerCurrentTimeDidChangeWithCurrentTime:(double)currentTime durationTime:(double)durationTime;
@end


SWIFT_CLASS("_TtC8NovaCore21NovaNativeAdVideoView")
@interface NovaNativeAdVideoView : UIView
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder SWIFT_UNAVAILABLE;
- (nonnull instancetype)initWithFrame:(CGRect)frame SWIFT_UNAVAILABLE;
@end






SWIFT_CLASS("_TtC8NovaCore16NovaNativeAdView")
@interface NovaNativeAdView : UIView
@property (nonatomic, copy) NSArray<UIView *> * _Nullable tappableViews;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER SWIFT_UNAVAILABLE;
- (nonnull instancetype)initWithFrame:(CGRect)frame SWIFT_UNAVAILABLE;
@end


@interface NovaNativeAdView (SWIFT_EXTENSION(NovaCore))
- (void)register:(NovaNativeAdItem * _Nonnull)nativeAd;
@end





/// ▶️ Player, simple way to play and stream media
SWIFT_CLASS("_TtC8NovaCore10NovaPlayer")
@interface NovaPlayer : UIViewController
- (nonnull instancetype)init;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)initWithNibName:(NSString * _Nullable)nibNameOrNil bundle:(NSBundle * _Nullable)nibBundleOrNil OBJC_DESIGNATED_INITIALIZER;
- (void)loadView;
- (void)viewDidLoad;
- (void)viewDidDisappear:(BOOL)animated;
@end








SWIFT_CLASS("_TtC8NovaCore14NovaPlayerView")
@interface NovaPlayerView : UIView
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly) Class _Nonnull layerClass;)
+ (Class _Nonnull)layerClass SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC8NovaCore22NovaUnifiedWebViewHost")
@interface NovaUnifiedWebViewHost : NSObject
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

@class WKUserContentController;
@class WKScriptMessage;

@interface NovaUnifiedWebViewHost (SWIFT_EXTENSION(NovaCore)) <WKScriptMessageHandler>
- (void)userContentController:(WKUserContentController * _Nonnull)userContentController didReceiveScriptMessage:(WKScriptMessage * _Nonnull)message;
@end

@class WKWebView;
@class WKWebViewConfiguration;
@class WKNavigationAction;
@class WKWindowFeatures;

@interface NovaUnifiedWebViewHost (SWIFT_EXTENSION(NovaCore)) <WKUIDelegate>
- (WKWebView * _Nullable)webView:(WKWebView * _Nonnull)webView createWebViewWithConfiguration:(WKWebViewConfiguration * _Nonnull)configuration forNavigationAction:(WKNavigationAction * _Nonnull)navigationAction windowFeatures:(WKWindowFeatures * _Nonnull)windowFeatures SWIFT_WARN_UNUSED_RESULT;
@end

@class WKNavigation;
@class WKWebpagePreferences;
@class WKNavigationResponse;

@interface NovaUnifiedWebViewHost (SWIFT_EXTENSION(NovaCore)) <WKNavigationDelegate>
- (void)webView:(WKWebView * _Nonnull)webView didCommitNavigation:(WKNavigation * _Null_unspecified)navigation;
- (void)webView:(WKWebView * _Nonnull)webView didStartProvisionalNavigation:(WKNavigation * _Null_unspecified)navigation;
- (void)webView:(WKWebView * _Nonnull)webView decidePolicyForNavigationAction:(WKNavigationAction * _Nonnull)navigationAction preferences:(WKWebpagePreferences * _Nonnull)preferences decisionHandler:(void (^ _Nonnull)(WKNavigationActionPolicy, WKWebpagePreferences * _Nonnull))decisionHandler;
- (void)webView:(WKWebView * _Nonnull)webView decidePolicyForNavigationAction:(WKNavigationAction * _Nonnull)navigationAction decisionHandler:(void (^ _Nonnull)(WKNavigationActionPolicy))decisionHandler;
- (void)webView:(WKWebView * _Nonnull)webView decidePolicyForNavigationResponse:(WKNavigationResponse * _Nonnull)navigationResponse decisionHandler:(void (^ _Nonnull)(WKNavigationResponsePolicy))decisionHandler;
- (void)webView:(WKWebView * _Nonnull)webView didFinishNavigation:(WKNavigation * _Null_unspecified)navigation;
- (void)webView:(WKWebView * _Nonnull)webView didFailProvisionalNavigation:(WKNavigation * _Null_unspecified)navigation withError:(NSError * _Nonnull)error;
- (void)webViewWebContentProcessDidTerminate:(WKWebView * _Nonnull)webView;
@end


SWIFT_CLASS("_TtC8NovaCore15NovaVideoPlayer")
@interface NovaVideoPlayer : NSObject
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end





@class NSURL;

SWIFT_CLASS("_TtC8NovaCore27NovaVideoPlayerCacheHandler")
@interface NovaVideoPlayerCacheHandler : NSObject
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) NovaVideoPlayerCacheHandler * _Nonnull shared;)
+ (NovaVideoPlayerCacheHandler * _Nonnull)shared SWIFT_WARN_UNUSED_RESULT;
- (void)getControllerToPreloadWithCacheKey:(NSString * _Nonnull)cacheKey url:(NSURL * _Nonnull)url;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC8NovaCore25NovaVideoPlayerController")
@interface NovaVideoPlayerController : NSObject
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


@class UIGestureRecognizer;
@class UITouch;

@interface NovaVideoPlayerController (SWIFT_EXTENSION(NovaCore)) <UIGestureRecognizerDelegate>
- (BOOL)gestureRecognizer:(UIGestureRecognizer * _Nonnull)gestureRecognizer shouldReceiveTouch:(UITouch * _Nonnull)touch SWIFT_WARN_UNUSED_RESULT;
@end





SWIFT_CLASS("_TtC8NovaCore21NovaVideoProgressView")
@interface NovaVideoProgressView : UIView
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder SWIFT_UNAVAILABLE;
- (nonnull instancetype)initWithFrame:(CGRect)frame SWIFT_UNAVAILABLE;
@end


SWIFT_CLASS("_TtC8NovaCore21NovaWebViewBottomView")
@interface NovaWebViewBottomView : UIView
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder SWIFT_UNAVAILABLE;
@end




SWIFT_CLASS("_TtC8NovaCore25NovaWebViewNavigationView")
@interface NovaWebViewNavigationView : UIView
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder SWIFT_UNAVAILABLE;
@end


@interface UIApplication (SWIFT_EXTENSION(NovaCore))
@property (nonatomic, readonly) UIEdgeInsets nova_safeAreaInsets;
@end





@interface UIColor (SWIFT_EXTENSION(NovaCore))
- (UIColor * _Nonnull)nb_opacity1 SWIFT_WARN_UNUSED_RESULT;
- (UIColor * _Nonnull)nb_opacity2 SWIFT_WARN_UNUSED_RESULT;
- (UIColor * _Nonnull)nb_opacity3 SWIFT_WARN_UNUSED_RESULT;
- (UIColor * _Nonnull)nb_opacity4 SWIFT_WARN_UNUSED_RESULT;
- (UIColor * _Nonnull)nb_opacity5 SWIFT_WARN_UNUSED_RESULT;
- (UIColor * _Nonnull)nb_opacity6 SWIFT_WARN_UNUSED_RESULT;
- (UIColor * _Nonnull)nb_opacity7 SWIFT_WARN_UNUSED_RESULT;
- (UIColor * _Nonnull)nb_opacity8 SWIFT_WARN_UNUSED_RESULT;
- (UIColor * _Nonnull)nb_opacity9 SWIFT_WARN_UNUSED_RESULT;
@end


@interface UIColor (SWIFT_EXTENSION(NovaCore))
- (nonnull instancetype)initWithLight:(UIColor * _Nonnull)light dark:(UIColor * _Nonnull)dark;
@end









@interface UIImage (SWIFT_EXTENSION(NovaCore))
- (nullable instancetype)initWithNovasystemName:(enum NovaSystem)novasystemName;
- (nullable instancetype)initWithNovasystemName:(enum NovaSystem)novasystemName tintColor:(UIColor * _Nonnull)tintColor;
@end








@interface UIView (SWIFT_EXTENSION(NovaCore))
@property (nonatomic, readonly) BOOL nova_isPartiallyVisibleOnScreen;
@end

#endif
#if __has_attribute(external_source_symbol)
# pragma clang attribute pop
#endif
#if defined(__cplusplus)
#endif
#pragma clang diagnostic pop
#endif

#else
#error unsupported Swift architecture
#endif
